
;; Instructions to test
;;   + ADC AND ASL
;;   + CMP
;;   + DEC
;;   + EOR
;;   + INC
;;   + LDA LDY LSR
;;   + ORA ROL ROR
;;   + SBC STA
;;
;; Almost the same routine with zero_page_x.asm
;; except using STY in zero page mode here

.segment "NES_FILE_HEADER"
.byte "NES", $1A, 2

.segment "CODE"
main:
    ;; Initialize
    LDA #$5a    ; 0x8000 @REG A=0x5a X=0x00 Y=0x00 S=0xfd P=0b00100100 PC=0x8002
    LDX #$01    ; 0x8002 @REG A=0x5a X=0x01 Y=0x00 S=0xfd P=0b00100100 PC=0x8004

    STA $07fe,X ; 0x8004 @REG A=0x5a X=0x01 Y=0x00 S=0xfd P=0b00100100 PC=0x8007 @RAM 0x07ff 0x5a

    INC $07fe,X ; 0x8007 @REG A=0x5a X=0x01 Y=0x00 S=0xfd P=0b00100100 PC=0x800a @RAM 0x07ff 0x5b

    ASL $07fe,X ; 0x800a @REG A=0x5a X=0x01 Y=0x00 S=0xfd P=0b10100100 PC=0x800d @RAM 0x07ff 0xb6
    ROL $07fe,X ; 0x800d @REG A=0x5a X=0x01 Y=0x00 S=0xfd P=0b00100101 PC=0x8010 @RAM 0x07ff 0x6d

    LDY $07fe,X ; 0x8010 @REG A=0x5a X=0x01 Y=0x6d S=0xfd P=0b00100101 PC=0x8013
    STY $00     ; 0x8013 @REG A=0x5a X=0x01 Y=0x6d S=0xfd P=0b00100101 PC=0x8015 @RAM 0x0000 0x6d

    ROR $07ff,X ; 0x8015 @REG A=0x5a X=0x01 Y=0x6d S=0xfd P=0b10100101 PC=0x8018 @RAM 0x0000 0xb6
    LSR $07ff,X ; 0x8018 @REG A=0x5a X=0x01 Y=0x6d S=0xfd P=0b00100100 PC=0x801b @RAM 0x0000 0x5b

    DEC $07ff,X ; 0x801b @REG A=0x5a X=0x01 Y=0x6d S=0xfd P=0b00100100 PC=0x801e @RAM 0x0000 0x5a

    LDA $07fe,X ; 0x801e @REG A=0x6d X=0x01 Y=0x6d S=0xfd P=0b00100100 PC=0x8021

    EOR $07ff,X ; 0x8021 @REG A=0x37 X=0x01 Y=0x6d S=0xfd P=0b00100100 PC=0x8024
    AND $07fe,X ; 0x8024 @REG A=0x25 X=0x01 Y=0x6d S=0xfd P=0b00100100 PC=0x8027
    ORA $07ff,X ; 0x8027 @REG A=0x7f X=0x01 Y=0x6d S=0xfd P=0b00100100 PC=0x802a

    CMP $07ff,X ; 0x802a @REG A=0x7f X=0x01 Y=0x6d S=0xfd P=0b00100100 PC=0x802d

    SBC $07fe,X ; 0x802d @REG A=0x12 X=0x01 Y=0x6d S=0xfd P=0b00100100 PC=0x8030
    ADC $07ff,X ; 0x8030 @REG A=0x6c X=0x01 Y=0x6d S=0xfd P=0b00100100 PC=0x8033

.segment "INTERRUPT_VECTOR"
    .word main, main, main